Typr.U = {
  shape: function (t, e, r) {
    for (
      var s = function (t, e, r, s) {
          var n = e[r],
            a = e[r + 1],
            h = t.kern;
          if (h) {
            var o = h.glyph1.indexOf(n);
            if (-1 != o) {
              var f = h.rval[o].glyph2.indexOf(a);
              if (-1 != f) return [0, 0, h.rval[o].vals[f], 0];
            }
          }
          return [0, 0, 0, 0];
        },
        n = [],
        a = 0;
      a < e.length;
      a++
    ) {
      var h = e.codePointAt(a);
      h > 65535 && a++, n.push(Typr.U.codeToGlyph(t, h));
    }
    var o = [];
    for (a = 0; a < n.length; a++) {
      var f = s(t, n, a),
        i = n[a],
        l = t.hmtx.aWidth[i] + f[2];
      o.push({ g: i, cl: a, dx: 0, dy: 0, ax: l, ay: 0 }), l;
    }
    return o;
  },
  shapeToPath: function (t, e, r) {
    for (
      var s = { cmds: [], crds: [] }, n = 0, a = 0, h = 0;
      h < e.length;
      h++
    ) {
      for (
        var o = e[h], f = Typr.U.glyphToPath(t, o.g), i = f.crds, l = 0;
        l < i.length;
        l += 2
      )
        s.crds.push(i[l] + n + o.dx), s.crds.push(i[l + 1] + a + o.dy);
      r && s.cmds.push(r);
      for (l = 0; l < f.cmds.length; l++) s.cmds.push(f.cmds[l]);
      var c = s.cmds.length;
      r && 0 != c && 'X' != s.cmds[c - 1] && s.cmds.push('X'),
        (n += o.ax),
        (a += o.ay);
    }
    return { cmds: s.cmds, crds: s.crds };
  },
  codeToGlyph: function (t, e) {
    for (
      var r = t.cmap,
        s = -1,
        n = ['p3e10', 'p0e4', 'p3e1', 'p1e0', 'p0e3', 'p0e1'],
        a = 0;
      a < n.length;
      a++
    )
      if (null != r.ids[n[a]]) {
        s = r.ids[n[a]];
        break;
      }
    if (-1 == s) throw 'no familiar platform and encoding!';
    var h = function (t, e, r) {
        for (var s = 0, n = Math.floor(t.length / e); s + 1 != n; ) {
          var a = s + ((n - s) >>> 1);
          t[a * e] <= r ? (s = a) : (n = a);
        }
        return s * e;
      },
      o = r.tables[s],
      f = o.format,
      i = -1;
    if (0 == f) i = e >= o.map.length ? 0 : o.map[e];
    else if (4 == f) {
      var l = -1,
        c = o.endCount;
      if (
        (e > c[c.length - 1] ? (l = -1) : c[(l = h(c, 1, e))] < e && l++,
        -1 == l)
      )
        i = 0;
      else if (e < o.startCount[l]) i = 0;
      else {
        i =
          65535 &
          (0 != o.idRangeOffset[l]
            ? o.glyphIdArray[
                e -
                  o.startCount[l] +
                  (o.idRangeOffset[l] >> 1) -
                  (o.idRangeOffset.length - l)
              ]
            : e + o.idDelta[l]);
      }
    } else if (6 == f) {
      var u = e - o.firstCode,
        d = o.glyphIdArray;
      i = u < 0 || u >= d.length ? 0 : d[u];
    } else {
      if (12 != f) throw 'unknown cmap table format ' + o.format;
      var v = o.groups;
      e > v[v.length - 2]
        ? (i = 0)
        : (v[(a = h(v, 3, e))] <= e &&
            e <= v[a + 1] &&
            (i = v[a + 2] + (e - v[a])),
          -1 == i && (i = 0));
    }
    var p = t['SVG '],
      g = t.loca;
    return (
      0 == i ||
        null != t['CFF '] ||
        (null != p && null != p.entries[i]) ||
        g[i] != g[i + 1] ||
        -1 !=
          [
            9, 10, 11, 12, 13, 32, 133, 160, 5760, 8232, 8233, 8239, 12288,
            6158, 8203, 8204, 8205, 8288, 65279,
          ].indexOf(e) ||
        (8192 <= e && e <= 8202) ||
        (i = 0),
      i
    );
  },
  glyphToPath: function (t, e) {
    var r = { cmds: [], crds: [] },
      s = t['SVG '],
      n = t['CFF '],
      a = Typr.U;
    if (s && s.entries[e]) {
      var h = s.entries[e];
      null != h &&
        ('string' == typeof h && ((h = a.SVG.toPath(h)), (s.entries[e] = h)),
        (r = h));
    } else if (n) {
      var o = n.Private,
        f = {
          x: 0,
          y: 0,
          stack: [],
          nStems: 0,
          haveWidth: !1,
          width: o ? o.defaultWidthX : 0,
          open: !1,
        };
      if (n.ROS) {
        for (var i = 0; n.FDSelect[i + 2] <= e; ) i += 2;
        o = n.FDArray[n.FDSelect[i + 1]].Private;
      }
      a._drawCFF(n.CharStrings[e], f, n, o, r);
    } else t.glyf && a._drawGlyf(e, t, r);
    return { cmds: r.cmds, crds: r.crds };
  },
  _drawGlyf: function (t, e, r) {
    var s = e.glyf[t];
    null == s && (s = e.glyf[t] = Typr.T.glyf._parseGlyf(e, t)),
      null != s &&
        (s.noc > -1 ? Typr.U._simpleGlyph(s, r) : Typr.U._compoGlyph(s, e, r));
  },
  _simpleGlyph: function (t, e) {
    for (var r = Typr.U.P, s = 0; s < t.noc; s++) {
      for (
        var n = 0 == s ? 0 : t.endPts[s - 1] + 1, a = t.endPts[s], h = n;
        h <= a;
        h++
      ) {
        var o = h == n ? a : h - 1,
          f = h == a ? n : h + 1,
          i = 1 & t.flags[h],
          l = 1 & t.flags[o],
          c = 1 & t.flags[f],
          u = t.xs[h],
          d = t.ys[h];
        if (h == n)
          if (i) {
            if (!l) {
              r.MoveTo(e, u, d);
              continue;
            }
            r.MoveTo(e, t.xs[o], t.ys[o]);
          } else
            l
              ? r.MoveTo(e, t.xs[o], t.ys[o])
              : r.MoveTo(
                  e,
                  Math.floor(0.5 * (t.xs[o] + u)),
                  Math.floor(0.5 * (t.ys[o] + d)),
                );
        i
          ? l && r.LineTo(e, u, d)
          : c
          ? r.qCurveTo(e, u, d, t.xs[f], t.ys[f])
          : r.qCurveTo(
              e,
              u,
              d,
              Math.floor(0.5 * (u + t.xs[f])),
              Math.floor(0.5 * (d + t.ys[f])),
            );
      }
      r.ClosePath(e);
    }
  },
  _compoGlyph: function (t, e, r) {
    for (var s = 0; s < t.parts.length; s++) {
      var n = { cmds: [], crds: [] },
        a = t.parts[s];
      Typr.U._drawGlyf(a.glyphIndex, e, n);
      for (var h = a.m, o = 0; o < n.crds.length; o += 2) {
        var f = n.crds[o],
          i = n.crds[o + 1];
        r.crds.push(f * h.a + i * h.b + h.tx),
          r.crds.push(f * h.c + i * h.d + h.ty);
      }
      for (o = 0; o < n.cmds.length; o++) r.cmds.push(n.cmds[o]);
    }
  },
  pathToSVG: function (t, e) {
    var r = t.cmds,
      s = t.crds;
    null == e && (e = 5);
    for (
      var n = [], a = 0, h = { M: 2, L: 2, Q: 4, C: 6 }, o = 0;
      o < r.length;
      o++
    ) {
      var f = r[o],
        i = a + (h[f] ? h[f] : 0);
      for (n.push(f); a < i; ) {
        var l = s[a++];
        n.push(parseFloat(l.toFixed(e)) + (a == i ? '' : ' '));
      }
    }
    return n.join('');
  },
  SVGToPath: function (t) {
    var e = { cmds: [], crds: [] };
    return Typr.U.SVG.svgToPath(t, e), { cmds: e.cmds, crds: e.crds };
  },
  pathToContext: function (t, e) {
    for (var r = 0, s = t.cmds, n = t.crds, a = 0; a < s.length; a++) {
      var h = s[a];
      'M' == h
        ? (e.moveTo(n[r], n[r + 1]), (r += 2))
        : 'L' == h
        ? (e.lineTo(n[r], n[r + 1]), (r += 2))
        : 'C' == h
        ? (e.bezierCurveTo(
            n[r],
            n[r + 1],
            n[r + 2],
            n[r + 3],
            n[r + 4],
            n[r + 5],
          ),
          (r += 6))
        : 'Q' == h
        ? (e.quadraticCurveTo(n[r], n[r + 1], n[r + 2], n[r + 3]), (r += 4))
        : '#' == h.charAt(0)
        ? (e.beginPath(), (e.fillStyle = h))
        : 'Z' == h
        ? e.closePath()
        : 'X' == h && e.fill();
    }
  },
  P: {
    MoveTo: function (t, e, r) {
      t.cmds.push('M'), t.crds.push(e, r);
    },
    LineTo: function (t, e, r) {
      t.cmds.push('L'), t.crds.push(e, r);
    },
    CurveTo: function (t, e, r, s, n, a, h) {
      t.cmds.push('C'), t.crds.push(e, r, s, n, a, h);
    },
    qCurveTo: function (t, e, r, s, n) {
      t.cmds.push('Q'), t.crds.push(e, r, s, n);
    },
    ClosePath: function (t) {
      t.cmds.push('Z');
    },
  },
  _drawCFF: function (t, e, r, s, n) {
    for (
      var a = e.stack,
        h = e.nStems,
        o = e.haveWidth,
        f = e.width,
        i = e.open,
        l = 0,
        c = e.x,
        u = e.y,
        d = 0,
        v = 0,
        p = 0,
        g = 0,
        m = 0,
        y = 0,
        T = 0,
        C = 0,
        b = 0,
        _ = 0,
        M = Typr.T.CFF,
        x = Typr.U.P,
        P = s.nominalWidthX,
        w = { val: 0, size: 0 };
      l < t.length;

    ) {
      M.getCharString(t, l, w);
      var S = w.val;
      if (((l += w.size), 'o1' == S || 'o18' == S))
        a.length % 2 != 0 && !o && (f = a.shift() + P),
          (h += a.length >> 1),
          (a.length = 0),
          (o = !0);
      else if ('o3' == S || 'o23' == S) {
        a.length % 2 != 0 && !o && (f = a.shift() + P),
          (h += a.length >> 1),
          (a.length = 0),
          (o = !0);
      } else if ('o4' == S)
        a.length > 1 && !o && ((f = a.shift() + P), (o = !0)),
          i && x.ClosePath(n),
          (u += a.pop()),
          x.MoveTo(n, c, u),
          (i = !0);
      else if ('o5' == S)
        for (; a.length > 0; )
          (c += a.shift()), (u += a.shift()), x.LineTo(n, c, u);
      else if ('o6' == S || 'o7' == S)
        for (var F = a.length, A = 'o6' == S, U = 0; U < F; U++) {
          var G = a.shift();
          A ? (c += G) : (u += G), (A = !A), x.LineTo(n, c, u);
        }
      else if ('o8' == S || 'o24' == S) {
        F = a.length;
        for (var L = 0; L + 6 <= F; )
          (d = c + a.shift()),
            (v = u + a.shift()),
            (p = d + a.shift()),
            (g = v + a.shift()),
            (c = p + a.shift()),
            (u = g + a.shift()),
            x.CurveTo(n, d, v, p, g, c, u),
            (L += 6);
        'o24' == S && ((c += a.shift()), (u += a.shift()), x.LineTo(n, c, u));
      } else {
        if ('o11' == S) break;
        if ('o1234' == S || 'o1235' == S || 'o1236' == S || 'o1237' == S)
          'o1234' == S &&
            ((v = u),
            (p = (d = c + a.shift()) + a.shift()),
            (_ = g = v + a.shift()),
            (y = g),
            (C = u),
            (c =
              (T = (m = (b = p + a.shift()) + a.shift()) + a.shift()) +
              a.shift()),
            x.CurveTo(n, d, v, p, g, b, _),
            x.CurveTo(n, m, y, T, C, c, u)),
            'o1235' == S &&
              ((d = c + a.shift()),
              (v = u + a.shift()),
              (p = d + a.shift()),
              (g = v + a.shift()),
              (b = p + a.shift()),
              (_ = g + a.shift()),
              (m = b + a.shift()),
              (y = _ + a.shift()),
              (T = m + a.shift()),
              (C = y + a.shift()),
              (c = T + a.shift()),
              (u = C + a.shift()),
              a.shift(),
              x.CurveTo(n, d, v, p, g, b, _),
              x.CurveTo(n, m, y, T, C, c, u)),
            'o1236' == S &&
              ((d = c + a.shift()),
              (v = u + a.shift()),
              (p = d + a.shift()),
              (_ = g = v + a.shift()),
              (y = g),
              (T = (m = (b = p + a.shift()) + a.shift()) + a.shift()),
              (C = y + a.shift()),
              (c = T + a.shift()),
              x.CurveTo(n, d, v, p, g, b, _),
              x.CurveTo(n, m, y, T, C, c, u)),
            'o1237' == S &&
              ((d = c + a.shift()),
              (v = u + a.shift()),
              (p = d + a.shift()),
              (g = v + a.shift()),
              (b = p + a.shift()),
              (_ = g + a.shift()),
              (m = b + a.shift()),
              (y = _ + a.shift()),
              (T = m + a.shift()),
              (C = y + a.shift()),
              Math.abs(T - c) > Math.abs(C - u)
                ? (c = T + a.shift())
                : (u = C + a.shift()),
              x.CurveTo(n, d, v, p, g, b, _),
              x.CurveTo(n, m, y, T, C, c, u));
        else if ('o14' == S) {
          if (
            (a.length > 0 &&
              !o &&
              ((f = a.shift() + r.nominalWidthX), (o = !0)),
            4 == a.length)
          ) {
            var k = a.shift(),
              O = a.shift(),
              V = a.shift(),
              W = a.shift(),
              B = M.glyphBySE(r, V),
              I = M.glyphBySE(r, W);
            Typr.U._drawCFF(r.CharStrings[B], e, r, s, n),
              (e.x = k),
              (e.y = O),
              Typr.U._drawCFF(r.CharStrings[I], e, r, s, n);
          }
          i && (x.ClosePath(n), (i = !1));
        } else if ('o19' == S || 'o20' == S) {
          a.length % 2 != 0 && !o && (f = a.shift() + P),
            (h += a.length >> 1),
            (a.length = 0),
            (o = !0),
            (l += (h + 7) >> 3);
        } else if ('o21' == S)
          a.length > 2 && !o && ((f = a.shift() + P), (o = !0)),
            (u += a.pop()),
            (c += a.pop()),
            i && x.ClosePath(n),
            x.MoveTo(n, c, u),
            (i = !0);
        else if ('o22' == S)
          a.length > 1 && !o && ((f = a.shift() + P), (o = !0)),
            (c += a.pop()),
            i && x.ClosePath(n),
            x.MoveTo(n, c, u),
            (i = !0);
        else if ('o25' == S) {
          for (; a.length > 6; )
            (c += a.shift()), (u += a.shift()), x.LineTo(n, c, u);
          (d = c + a.shift()),
            (v = u + a.shift()),
            (p = d + a.shift()),
            (g = v + a.shift()),
            (c = p + a.shift()),
            (u = g + a.shift()),
            x.CurveTo(n, d, v, p, g, c, u);
        } else if ('o26' == S)
          for (a.length % 2 && (c += a.shift()); a.length > 0; )
            (d = c),
              (v = u + a.shift()),
              (c = p = d + a.shift()),
              (u = (g = v + a.shift()) + a.shift()),
              x.CurveTo(n, d, v, p, g, c, u);
        else if ('o27' == S)
          for (a.length % 2 && (u += a.shift()); a.length > 0; )
            (v = u),
              (p = (d = c + a.shift()) + a.shift()),
              (g = v + a.shift()),
              (c = p + a.shift()),
              (u = g),
              x.CurveTo(n, d, v, p, g, c, u);
        else if ('o10' == S || 'o29' == S) {
          var q = 'o10' == S ? s : r;
          if (0 == a.length) console.log('error: empty stack');
          else {
            var Q = a.pop(),
              X = q.Subrs[Q + q.Bias];
            (e.x = c),
              (e.y = u),
              (e.nStems = h),
              (e.haveWidth = o),
              (e.width = f),
              (e.open = i),
              Typr.U._drawCFF(X, e, r, s, n),
              (c = e.x),
              (u = e.y),
              (h = e.nStems),
              (o = e.haveWidth),
              (f = e.width),
              (i = e.open);
          }
        } else if ('o30' == S || 'o31' == S) {
          var D = a.length,
            E = ((L = 0), 'o31' == S);
          for (L += D - (F = -3 & D); L < F; )
            E
              ? ((v = u),
                (p = (d = c + a.shift()) + a.shift()),
                (u = (g = v + a.shift()) + a.shift()),
                F - L == 5 ? ((c = p + a.shift()), L++) : (c = p),
                (E = !1))
              : ((d = c),
                (v = u + a.shift()),
                (p = d + a.shift()),
                (g = v + a.shift()),
                (c = p + a.shift()),
                F - L == 5 ? ((u = g + a.shift()), L++) : (u = g),
                (E = !0)),
              x.CurveTo(n, d, v, p, g, c, u),
              (L += 4);
        } else {
          if ('o' == (S + '').charAt(0))
            throw (console.log('Unknown operation: ' + S, t), S);
          a.push(S);
        }
      }
    }
    (e.x = c),
      (e.y = u),
      (e.nStems = h),
      (e.haveWidth = o),
      (e.width = f),
      (e.open = i);
  },
  SVG: (function () {
    var t = {
      getScale: function (t) {
        return Math.sqrt(Math.abs(t[0] * t[3] - t[1] * t[2]));
      },
      translate: function (e, r, s) {
        t.concat(e, [1, 0, 0, 1, r, s]);
      },
      rotate: function (e, r) {
        t.concat(e, [
          Math.cos(r),
          -Math.sin(r),
          Math.sin(r),
          Math.cos(r),
          0,
          0,
        ]);
      },
      scale: function (e, r, s) {
        t.concat(e, [r, 0, 0, s, 0, 0]);
      },
      concat: function (t, e) {
        var r = t[0],
          s = t[1],
          n = t[2],
          a = t[3],
          h = t[4],
          o = t[5];
        (t[0] = r * e[0] + s * e[2]),
          (t[1] = r * e[1] + s * e[3]),
          (t[2] = n * e[0] + a * e[2]),
          (t[3] = n * e[1] + a * e[3]),
          (t[4] = h * e[0] + o * e[2] + e[4]),
          (t[5] = h * e[1] + o * e[3] + e[5]);
      },
      invert: function (t) {
        var e = t[0],
          r = t[1],
          s = t[2],
          n = t[3],
          a = t[4],
          h = t[5],
          o = e * n - r * s;
        (t[0] = n / o),
          (t[1] = -r / o),
          (t[2] = -s / o),
          (t[3] = e / o),
          (t[4] = (s * h - n * a) / o),
          (t[5] = (r * a - e * h) / o);
      },
      multPoint: function (t, e) {
        var r = e[0],
          s = e[1];
        return [r * t[0] + s * t[2] + t[4], r * t[1] + s * t[3] + t[5]];
      },
      multArray: function (t, e) {
        for (var r = 0; r < e.length; r += 2) {
          var s = e[r],
            n = e[r + 1];
          (e[r] = s * t[0] + n * t[2] + t[4]),
            (e[r + 1] = s * t[1] + n * t[3] + t[5]);
        }
      },
    };
    function e(t, e, r) {
      for (var s = [], n = 0, a = 0, h = 0; ; ) {
        var o = t.indexOf(e, a),
          f = t.indexOf(r, a);
        if (-1 == o && -1 == f) break;
        -1 == f || (-1 != o && o < f)
          ? (0 == h && (s.push(t.slice(n, o).trim()), (n = o + 1)),
            h++,
            (a = o + 1))
          : (-1 == o || (-1 != f && f < o)) &&
            (0 == --h && (s.push(t.slice(n, f).trim()), (n = f + 1)),
            (a = f + 1));
      }
      return s;
    }
    function r(r) {
      for (
        var n = e(r, '(', ')'), a = [1, 0, 0, 1, 0, 0], h = 0;
        h < n.length;
        h += 2
      ) {
        var o = a;
        (a = s(n[h], n[h + 1])), t.concat(a, o);
      }
      return a;
    }
    function s(e, r) {
      for (var s = [1, 0, 0, 1, 0, 0], n = !0, a = 0; a < r.length; a++) {
        var h = r.charAt(a);
        ',' == h || ' ' == h
          ? (n = !0)
          : '.' == h
          ? (n || ((r = r.slice(0, a) + ',' + r.slice(a)), a++), (n = !1))
          : '-' == h &&
            a > 0 &&
            'e' != r[a - 1] &&
            ((r = r.slice(0, a) + ' ' + r.slice(a)), a++, (n = !0));
      }
      if (((r = r.split(/\s*[\s,]\s*/).map(parseFloat)), 'translate' == e))
        1 == r.length ? t.translate(s, r[0], 0) : t.translate(s, r[0], r[1]);
      else if ('scale' == e)
        1 == r.length ? t.scale(s, r[0], r[0]) : t.scale(s, r[0], r[1]);
      else if ('rotate' == e) {
        var o = 0,
          f = 0;
        1 != r.length && ((o = r[1]), (f = r[2])),
          t.translate(s, -o, -f),
          t.rotate(s, (-Math.PI * r[0]) / 180),
          t.translate(s, o, f);
      } else 'matrix' == e ? (s = r) : console.log('unknown transform: ', e);
      return s;
    }
    function n(e, s, a) {
      for (var o = 0; o < e.length; o++) {
        var f = e[o],
          i = f.tagName,
          l = f.getAttribute('fill');
        if ((null == l && (l = a), 'g' == i)) {
          var c = { crds: [], cmds: [] };
          n(f.children, c, l);
          var u = f.getAttribute('transform');
          if (u) {
            var d = r(u);
            t.multArray(d, c.crds);
          }
          (s.crds = s.crds.concat(c.crds)), (s.cmds = s.cmds.concat(c.cmds));
        } else if ('path' == i || 'circle' == i || 'ellipse' == i) {
          var v;
          if (
            (s.cmds.push(l || '#000000'),
            'path' == i && (v = f.getAttribute('d')),
            'circle' == i || 'ellipse' == i)
          ) {
            for (
              var p = [0, 0, 0, 0], g = ['cx', 'cy', 'rx', 'ry', 'r'], m = 0;
              m < 5;
              m++
            ) {
              var y = f.getAttribute(g[m]);
              y &&
                ((y = parseFloat(y)), m < 4 ? (p[m] = y) : (p[2] = p[3] = y));
            }
            var T = p[0],
              C = p[1],
              b = p[2],
              _ = p[3];
            v = [
              'M',
              T - b,
              C,
              'a',
              b,
              _,
              0,
              1,
              0,
              2 * b,
              0,
              'a',
              b,
              _,
              0,
              1,
              0,
              2 * -b,
              0,
            ].join(' ');
          }
          h(v, s), s.cmds.push('X');
        } else 'defs' == i || console.log(i, f);
      }
    }
    function a(t, e, r) {
      for (var s = e; s < t.length && 'string' != typeof t[s]; ) s += r;
      return (s - e) / r;
    }
    function h(t, e) {
      for (
        var r = (function (t) {
            for (var e = [], r = 0, s = !1, n = '', a = ''; r < t.length; ) {
              var h = t.charCodeAt(r),
                o = t.charAt(r);
              r++;
              var f =
                (48 <= h && h <= 57) ||
                '.' == o ||
                '-' == o ||
                'e' == o ||
                'E' == o;
              s
                ? ('-' == o && 'e' != a) || ('.' == o && -1 != n.indexOf('.'))
                  ? (e.push(parseFloat(n)), (n = o))
                  : f
                  ? (n += o)
                  : (e.push(parseFloat(n)),
                    ',' != o && ' ' != o && e.push(o),
                    (s = !1))
                : f
                ? ((n = o), (s = !0))
                : ',' != o && ' ' != o && e.push(o),
                (a = o);
            }
            return s && e.push(parseFloat(n)), e;
          })(t),
          s = 0,
          n = 0,
          h = 0,
          o = 0,
          f = 0,
          i = e.crds.length,
          l = { M: 2, L: 2, H: 1, V: 1, T: 2, S: 4, A: 7, Q: 4, C: 6 },
          c = e.cmds,
          u = e.crds;
        s < r.length;

      ) {
        var d = r[s];
        s++;
        var v = d.toUpperCase();
        if ('Z' == v) c.push('Z'), (n = o), (h = f);
        else
          for (var p = a(r, s, l[v]), g = 0; g < p; g++) {
            1 == g && 'M' == v && ((d = d == v ? 'L' : 'l'), (v = 'L'));
            var m = 0,
              y = 0;
            if ((d != v && ((m = n), (y = h)), 'M' == v))
              (n = m + r[s++]),
                (h = y + r[s++]),
                c.push('M'),
                u.push(n, h),
                (o = n),
                (f = h);
            else if ('L' == v)
              (n = m + r[s++]), (h = y + r[s++]), c.push('L'), u.push(n, h);
            else if ('H' == v) (n = m + r[s++]), c.push('L'), u.push(n, h);
            else if ('V' == v) (h = y + r[s++]), c.push('L'), u.push(n, h);
            else if ('Q' == v) {
              var T = m + r[s++],
                C = y + r[s++],
                b = m + r[s++],
                _ = y + r[s++];
              c.push('Q'), u.push(T, C, b, _), (n = b), (h = _);
            } else if ('T' == v) {
              (T = n + n - u[(P = Math.max(u.length - 2, i))]),
                (C = h + h - u[P + 1]),
                (b = m + r[s++]),
                (_ = y + r[s++]);
              c.push('Q'), u.push(T, C, b, _), (n = b), (h = _);
            } else if ('C' == v) {
              (T = m + r[s++]),
                (C = y + r[s++]),
                (b = m + r[s++]),
                (_ = y + r[s++]);
              var M = m + r[s++],
                x = y + r[s++];
              c.push('C'), u.push(T, C, b, _, M, x), (n = M), (h = x);
            } else if ('S' == v) {
              var P;
              (T =
                n +
                n -
                u[
                  (P = Math.max(u.length - ('C' == c[c.length - 1] ? 4 : 2), i))
                ]),
                (C = h + h - u[P + 1]),
                (b = m + r[s++]),
                (_ = y + r[s++]),
                (M = m + r[s++]),
                (x = y + r[s++]);
              c.push('C'), u.push(T, C, b, _, M, x), (n = M), (h = x);
            } else if ('A' == v) {
              (T = n), (C = h);
              var w = r[s++],
                S = r[s++],
                F = r[s++] * (Math.PI / 180),
                A = r[s++],
                U = r[s++];
              (b = m + r[s++]), (_ = y + r[s++]);
              if (b == n && _ == h && 0 == w && 0 == S) continue;
              var G = (T - b) / 2,
                L = (C - _) / 2,
                k = Math.cos(F),
                O = Math.sin(F),
                V = k * G + O * L,
                W = -O * G + k * L,
                B = w * w,
                I = S * S,
                q = V * V,
                Q = W * W,
                X = (B * I - B * Q - I * q) / (B * Q + I * q),
                D = (A != U ? 1 : -1) * Math.sqrt(Math.max(X, 0)),
                E = (D * (w * W)) / S,
                H = (S * V * -D) / w,
                R = k * E - O * H + (T + b) / 2,
                Z = O * E + k * H + (C + _) / 2,
                z = function (t, e, r, s) {
                  var n =
                    (t * r + e * s) /
                    (Math.sqrt(t * t + e * e) * Math.sqrt(r * r + s * s));
                  return (
                    (t * s - e * r >= 0 ? 1 : -1) *
                    Math.acos(Math.max(-1, Math.min(1, n)))
                  );
                },
                N = (V - E) / w,
                j = (W - H) / S,
                J = z(1, 0, N, j),
                K = z(N, j, (-V - E) / w, (-W - H) / S);
              !(function (t, e, r, s, n, a, h) {
                var o = function (t, e) {
                    var r = Math.sin(e),
                      s = Math.cos(e),
                      n = ((e = t[0]), t[1]),
                      a = t[2],
                      h = t[3];
                    (t[0] = e * s + n * r),
                      (t[1] = -e * r + n * s),
                      (t[2] = a * s + h * r),
                      (t[3] = -a * r + h * s);
                  },
                  f = function (t, e) {
                    for (var r = 0; r < e.length; r += 2) {
                      var s = e[r],
                        n = e[r + 1];
                      (e[r] = t[0] * s + t[2] * n + t[4]),
                        (e[r + 1] = t[1] * s + t[3] * n + t[5]);
                    }
                  },
                  i = function (t, e) {
                    for (var r = 0; r < e.length; r++) t.push(e[r]);
                  };
                if (h) for (; a > n; ) a -= 2 * Math.PI;
                else for (; a < n; ) a += 2 * Math.PI;
                var l = (a - n) / 4,
                  c = Math.cos(l / 2),
                  u = -Math.sin(l / 2),
                  d = (4 - c) / 3,
                  v = 0 == u ? u : ((1 - c) * (3 - c)) / (3 * u),
                  p = [d, v, d, -v, c, -u],
                  g = { cmds: ['C', 'C', 'C', 'C'], crds: p.slice(0) },
                  m = [1, 0, 0, 1, 0, 0];
                o(m, -l);
                for (var y = 0; y < 3; y++) f(m, p), i(g.crds, p);
                o(m, l / 2 - n),
                  (m[0] *= s),
                  (m[1] *= s),
                  (m[2] *= s),
                  (m[3] *= s),
                  (m[4] = e),
                  (m[5] = r),
                  f(m, g.crds),
                  f(t.ctm, g.crds),
                  (function (t, e) {
                    i(t.cmds, e.cmds), i(t.crds, e.crds);
                  })(t.pth, g);
              })(
                { pth: e, ctm: [w * k, w * O, -S * O, S * k, R, Z] },
                0,
                0,
                1,
                J,
                J + (K %= 2 * Math.PI),
                0 == U,
              ),
                (n = b),
                (h = _);
            } else console.log('Unknown SVG command ' + d);
          }
      }
    }
    return {
      cssMap: function (t) {
        for (var r = e(t, '{', '}'), s = {}, n = 0; n < r.length; n += 2)
          for (var a = r[n].split(','), h = 0; h < a.length; h++) {
            var o = a[h].trim();
            null == s[o] && (s[o] = ''), (s[o] += r[n + 1]);
          }
        return s;
      },
      readTrnf: r,
      svgToPath: h,
      toPath: function (t) {
        var e = { cmds: [], crds: [] };
        if (null == t) return e;
        var r = new DOMParser()
            .parseFromString(t, 'image/svg+xml')
            .getElementsByTagName('svg')[0],
          s = r.getAttribute('viewBox');
        (s = s ? s.trim().split(' ').map(parseFloat) : [0, 0, 1e3, 1e3]),
          n(r.children, e);
        for (var a = 0; a < e.crds.length; a += 2) {
          var h = e.crds[a],
            o = e.crds[a + 1];
          (h -= s[0]), (o = -(o -= s[1])), (e.crds[a] = h), (e.crds[a + 1] = o);
        }
        return e;
      },
    };
  })(),
  initHB: function (t, e) {
    var r = function (t) {
        var e = 0;
        return (
          0 == (4294967168 & t)
            ? (e = 1)
            : 0 == (4294965248 & t)
            ? (e = 2)
            : 0 == (4294901760 & t)
            ? (e = 3)
            : 0 == (4292870144 & t) && (e = 4),
          e
        );
      },
      s = new window.TextEncoder('utf8');
    fetch(t)
      .then(function (t) {
        return t.arrayBuffer();
      })
      .then(function (t) {
        return WebAssembly.instantiate(t);
      })
      .then(function (t) {
        console.log('HB ready');
        var n = t.instance.exports,
          a = n.memory;
        a.grow(700);
        var h,
          o,
          f,
          i,
          l,
          c = new Uint8Array(a.buffer),
          u = new Uint32Array(a.buffer),
          d = new Int32Array(a.buffer);
        (Typr.U.shapeHB = function (t, e, a) {
          var v = t._data,
            p = t.name.postScriptName;
          h != p &&
            (null != o &&
              (n.hb_blob_destroy(o),
              n.free(f),
              n.hb_face_destroy(i),
              n.hb_font_destroy(l)),
            (f = n.malloc(v.byteLength)),
            c.set(v, f),
            (o = n.hb_blob_create(f, v.byteLength, 2, 0, 0)),
            (i = n.hb_face_create(o, 0)),
            (l = n.hb_font_create(i)),
            (h = p));
          var g = n.hb_buffer_create(),
            m = s.encode(e),
            y = m.length,
            T = n.malloc(y);
          c.set(m, T),
            n.hb_buffer_add_utf8(g, T, y, 0, y),
            n.free(T),
            n.hb_buffer_set_direction(g, a ? 4 : 5),
            n.hb_buffer_guess_segment_properties(g),
            n.hb_shape(l, g, 0, 0);
          var C = (function (t) {
            for (
              var e = n.hb_buffer_get_length(t),
                r = [],
                s = n.hb_buffer_get_glyph_infos(t, 0) >>> 2,
                a = n.hb_buffer_get_glyph_positions(t, 0) >>> 2,
                h = 0;
              h < e;
              ++h
            ) {
              var o = s + 5 * h,
                f = a + 5 * h;
              r.push({
                g: u[o + 0],
                cl: u[o + 2],
                ax: d[f + 0],
                ay: d[f + 1],
                dx: d[f + 2],
                dy: d[f + 3],
              });
            }
            return r;
          })(g);
          n.hb_buffer_destroy(g);
          var b = C.slice(0);
          a || b.reverse();
          for (var _ = 0, M = 0, x = 1; x < b.length; x++) {
            for (var P = b[x], w = P.cl; ; ) {
              var S = e.codePointAt(_),
                F = r(S);
              if (!(M + F <= w)) break;
              (M += F), (_ += S <= 65535 ? 1 : 2);
            }
            P.cl = _;
          }
          return C;
        }),
          e();
      });
  },
};
